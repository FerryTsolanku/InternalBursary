using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using Internal_Bursary.Models;

namespace Internal_Bursary.Controllers
{
    public class BursaryModelsController : Controller
    {
        private BursaryDBContext db = new BursaryDBContext();

        // GET: BursaryModels
        public ActionResult Index()
        {
            return View(db.Bursaries.ToList());
        }

        // GET: BursaryModels/Details/5
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            BursaryModel bursaryModel = db.Bursaries.Find(id);
            if (bursaryModel == null)
            {
                return HttpNotFound();
            }
            return View(bursaryModel);
        }

        // GET: BursaryModels/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: BursaryModels/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "PassID,Username,password")] BursaryModel bursaryModel)
        {
            string Uname = bursaryModel.Username;
            string pass = bursaryModel.password;
            //if (Uname == "Username" && pass == "password")
            //{
                if (ModelState.IsValid)
                {
                //    db.Bursaries.Add(bursaryModel);
                //    db.SaveChanges();
                //    return RedirectToAction("Index");
                }
            //}
            
            return View(bursaryModel);
        }

        // GET: BursaryModels/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            BursaryModel bursaryModel = db.Bursaries.Find(id);
            if (bursaryModel == null)
            {
                return HttpNotFound();
            }
            return View(bursaryModel);
        }

        // POST: BursaryModels/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "PassID,Username,password")] BursaryModel bursaryModel)
        {
            if (ModelState.IsValid)
            {
                db.Entry(bursaryModel).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(bursaryModel);
        }

        // GET: BursaryModels/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            BursaryModel bursaryModel = db.Bursaries.Find(id);
            if (bursaryModel == null)
            {
                return HttpNotFound();
            }
            return View(bursaryModel);
        }

        // POST: BursaryModels/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            BursaryModel bursaryModel = db.Bursaries.Find(id);
            db.Bursaries.Remove(bursaryModel);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
